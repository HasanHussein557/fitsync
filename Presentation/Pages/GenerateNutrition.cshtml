@page
@model GenerateNutritionModel

@{
    ViewData["Title"] = "Generate Nutrition Plan";
}

<div class="container-fluid p-0 bg-dark text-white">
    <div class="py-5">
        <div class="container">
            <div class="text-center mb-5">
                <span class="badge rounded-pill px-3 py-2 mb-3" style="background-color: #4c1d95; color: #d8b4fe;">NUTRITION GENERATOR</span>
                <h1 class="display-5 fw-bold mb-3" style="color: #c084fc;">Create Your Nutrition Plan</h1>
                <p class="lead text-secondary mx-auto" style="max-width: 700px;">Personalize a meal plan based on your goals and dietary preferences</p>
            </div>
            
            @if (!ModelState.IsValid)
            {
                <div class="alert alert-danger alert-dismissible fade show rounded-4" role="alert">
                    <ul class="mb-0">
                        @foreach (var error in ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    </ul>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            
            <div class="card border-0 rounded-4 p-4 mb-5" style="background-color: #1f2937; border-color: #374151;">
                <form method="post" asp-page-handler="GenerateNutrition">
                    <div class="row g-4">
                        <div class="col-md-6">
                            <div class="mb-4">
                                <label for="weight" class="form-label text-light">Weight (kg)</label>
                                <input type="number" min="20" max="300" name="weight" value="@Model.Weight" 
                                       class="form-control form-control-lg bg-dark text-light border-secondary rounded-pill" required/>
                            </div>
                            
                            <div class="mb-4">
                                <label for="height" class="form-label text-light">Height (cm)</label>
                                <input type="number" min="110" max="250" name="height" value="@Model.Height" 
                                       class="form-control form-control-lg bg-dark text-light border-secondary rounded-pill" required/>
                            </div>
                            
                            <div class="mb-4">
                                <label for="age" class="form-label text-light">Age</label>
                                <input type="number" min="16" max="100" name="age" value="@Model.Age" 
                                       class="form-control form-control-lg bg-dark text-light border-secondary rounded-pill" required/>
                            </div>
                            
                            <div class="mb-4">
                                <label for="sex" class="form-label text-light">Sex</label>
                                <select name="sex" class="form-select form-select-lg bg-dark text-light border-secondary rounded-pill" required>
                                    <option value="male" selected="@(Model.Sex == "male")">Male</option>
                                    <option value="female" selected="@(Model.Sex == "female")">Female</option>
                                    <option value="other" selected="@(Model.Sex == "other")">Other</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="mb-4">
                                <label for="goal" class="form-label text-light">Goal</label>
                                <select name="goal" class="form-select form-select-lg bg-dark text-light border-secondary rounded-pill" required>
                                    <option value="maintenance" selected="@(Model.Goal == "maintenance")">Maintenance</option>
                                    <option value="weight_loss" selected="@(Model.Goal == "weight_loss")">Weight Loss</option>
                                    <option value="muscle_gain" selected="@(Model.Goal == "muscle_gain")">Muscle Gain</option>
                                    <option value="performance" selected="@(Model.Goal == "performance")">Athletic Performance</option>
                                </select>
                            </div>
                            
                            <div class="mb-4">
                                <label for="dietaryPreferences" class="form-label text-light">Dietary Preferences</label>
                                <select name="dietaryPreferences" class="form-select form-select-lg bg-dark text-light border-secondary rounded-pill" required>
                                    <option value="balanced" selected="@(Model.DietaryPreferences == "balanced")">Balanced</option>
                                    <option value="regular" selected="@(Model.DietaryPreferences == "regular")">Regular</option>
                                    <option value="low_carb" selected="@(Model.DietaryPreferences == "low_carb")">Low Carb</option>
                                    <option value="high_protein" selected="@(Model.DietaryPreferences == "high_protein")">High Protein</option>
                                    <option value="vegetarian" selected="@(Model.DietaryPreferences == "vegetarian")">Vegetarian</option>
                                    <option value="vegan" selected="@(Model.DietaryPreferences == "vegan")">Vegan</option>
                                    <option value="keto" selected="@(Model.DietaryPreferences == "keto")">Keto</option>
                                    <option value="paleo" selected="@(Model.DietaryPreferences == "paleo")">Paleo</option>
                                </select>
                            </div>
                            
                            <div class="mb-4">
                                <label for="durationWeeks" class="form-label text-light">Duration (weeks)</label>
                                <select name="durationWeeks" class="form-select form-select-lg bg-dark text-light border-secondary rounded-pill" required>
                                    <option value="1" selected="@(Model.DurationWeeks == 1)">1 week</option>
                                    <option value="2" selected="@(Model.DurationWeeks == 2)">2 weeks</option>
                                    <option value="4" selected="@(Model.DurationWeeks == 4)">4 weeks</option>
                                    <option value="8" selected="@(Model.DurationWeeks == 8)">8 weeks</option>
                                    <option value="12" selected="@(Model.DurationWeeks == 12)">12 weeks</option>
                                </select>
                            </div>
                            
                            <div class="mb-4">
                                <div class="form-check form-switch mt-2">
                                    <input class="form-check-input" type="checkbox" id="hasAllergies" name="hasAllergies" value="true" @(Model.HasAllergies ? "checked" : "")>
                                    <label class="form-check-label text-light" for="hasAllergies">I have food allergies or intolerances</label>
                                </div>
                                
                                <div id="allergiesSection" class="mt-3 @(Model.HasAllergies ? "" : "d-none")">
                                    <label for="foodIntolerances" class="form-label text-light">List your food intolerances (comma separated)</label>
                                    <input type="text" name="foodIntolerances" value="@Model.FoodIntolerances" 
                                           placeholder="e.g., peanuts, shellfish, dairy" class="form-control bg-dark text-light border-secondary rounded-pill"/>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="text-center mt-4">
                        <button type="submit" class="btn btn-lg px-5 py-3 rounded-pill" style="background-color: #8b5cf6; color: white;">
                            Generate Nutrition Plan
                        </button>
                    </div>
                </form>
            </div>
            
            @if (Model.NutritionPlan != null)
            {
                <div class="text-center my-5">
                    <span class="badge rounded-pill px-3 py-2 mb-3" style="background-color: #4c1d95; color: #d8b4fe;">YOUR PLAN</span>
                    <h2 class="display-6 fw-bold mb-4" style="color: #c084fc;">Personalized Nutrition Plan</h2>
                </div>
                
                <div class="card border-0 rounded-4 p-4 mb-5" style="background-color: #1f2937; border-color: #374151;">
                    <h3 class="h4 fw-bold mb-4 text-center" style="color: #c084fc;">Daily Nutritional Goals</h3>
                    
                    <div class="row g-4 text-center">
                        <div class="col-md-3 col-6">
                            <div class="p-3 rounded-4" style="background-color: #2d3748;">
                                <p class="text-secondary mb-1">Daily Calories</p>
                                <p class="h3 fw-bold text-white">@Model.NutritionPlan.GetAverageDailyCalories() kcal</p>
                                <p class="small text-secondary">(@Model.NutritionPlan.DailyCaloriesRange.Min - @Model.NutritionPlan.DailyCaloriesRange.Max)</p>
                            </div>
                        </div>
                        
                        @foreach (var macro in Model.NutritionPlan.MacronutrientsRange)
                        {
                            <div class="col-md-3 col-6">
                                <div class="p-3 rounded-4" style="background-color: #2d3748;">
                                    <p class="text-secondary mb-1">@GetMacroLabel(macro.Key)</p>
                                    <p class="h3 fw-bold" style="color: @GetMacroHexColor(macro.Key)">@Model.NutritionPlan.GetAverageMacroValue(macro.Key) g</p>
                                    <p class="small text-secondary">(@macro.Value.Min - @macro.Value.Max)</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                
                <div class="text-center mb-4">
                    <h3 class="h4 fw-bold" style="color: #c084fc;">Daily Meal Plan</h3>
                </div>
                
                @if (Model.NutritionPlan.MealPlan.Breakfast.Any())
                {
                    <div class="card border-0 rounded-4 mb-4 overflow-hidden" style="background-color: #1f2937; border-color: #374151;">
                        <div class="card-header border-0 py-3" style="background-color: #4f46e5;">
                            <h4 class="h5 fw-bold mb-0 text-white">Breakfast</h4>
                        </div>
                        <div class="card-body">
                            @foreach (var meal in Model.NutritionPlan.MealPlan.Breakfast)
                            {
                                <div class="mb-4">
                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                        <p class="fw-bold text-white mb-0">@meal.Description</p>
                                        <span class="badge bg-dark">@meal.TotalCalories kcal</span>
                                    </div>
                                    
                                    <div class="table-responsive">
                                        <table class="table table-dark table-borderless table-hover rounded">
                                            <thead class="text-light" style="background-color: #374151;">
                                                <tr>
                                                    <th>Ingredient</th>
                                                    <th class="text-center">Quantity</th>
                                                    <th class="text-center">Calories</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var ingredient in meal.Ingredients)
                                                {
                                                    <tr>
                                                        <td><span class="text-white">@ingredient.Name</span></td>
                                                        <td class="text-center">@ingredient.Quantity</td>
                                                        <td class="text-center">@ingredient.Calories kcal</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                    
                                    @if (!string.IsNullOrEmpty(meal.Recipe))
                                    {
                                        <div class="mt-3 p-3 rounded-3" style="background-color: #2d3748;">
                                            <p class="fw-bold text-white mb-1">Recipe:</p>
                                            <p class="text-light mb-0">@meal.Recipe</p>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                }
                
                @if (Model.NutritionPlan.MealPlan.Lunch.Any())
                {
                    <div class="card border-0 rounded-4 mb-4 overflow-hidden" style="background-color: #1f2937; border-color: #374151;">
                        <div class="card-header border-0 py-3" style="background-color: #4f46e5;">
                            <h4 class="h5 fw-bold mb-0 text-white">Lunch</h4>
                        </div>
                        <div class="card-body">
                            @foreach (var meal in Model.NutritionPlan.MealPlan.Lunch)
                            {
                                <div class="mb-4">
                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                        <p class="fw-bold text-white mb-0">@meal.Description</p>
                                        <span class="badge bg-dark">@meal.TotalCalories kcal</span>
                                    </div>
                                    
                                    <div class="table-responsive">
                                        <table class="table table-dark table-borderless table-hover rounded">
                                            <thead class="text-light" style="background-color: #374151;">
                                                <tr>
                                                    <th>Ingredient</th>
                                                    <th class="text-center">Quantity</th>
                                                    <th class="text-center">Calories</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var ingredient in meal.Ingredients)
                                                {
                                                    <tr>
                                                        <td><span class="text-white">@ingredient.Name</span></td>
                                                        <td class="text-center">@ingredient.Quantity</td>
                                                        <td class="text-center">@ingredient.Calories kcal</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                    
                                    @if (!string.IsNullOrEmpty(meal.Recipe))
                                    {
                                        <div class="mt-3 p-3 rounded-3" style="background-color: #2d3748;">
                                            <p class="fw-bold text-white mb-1">Recipe:</p>
                                            <p class="text-light mb-0">@meal.Recipe</p>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                }
                
                @if (Model.NutritionPlan.MealPlan.Dinner.Any())
                {
                    <div class="card border-0 rounded-4 mb-4 overflow-hidden" style="background-color: #1f2937; border-color: #374151;">
                        <div class="card-header border-0 py-3" style="background-color: #4f46e5;">
                            <h4 class="h5 fw-bold mb-0 text-white">Dinner</h4>
                        </div>
                        <div class="card-body">
                            @foreach (var meal in Model.NutritionPlan.MealPlan.Dinner)
                            {
                                <div class="mb-4">
                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                        <p class="fw-bold text-white mb-0">@meal.Description</p>
                                        <span class="badge bg-dark">@meal.TotalCalories kcal</span>
                                    </div>
                                    
                                    <div class="table-responsive">
                                        <table class="table table-dark table-borderless table-hover rounded">
                                            <thead class="text-light" style="background-color: #374151;">
                                                <tr>
                                                    <th>Ingredient</th>
                                                    <th class="text-center">Quantity</th>
                                                    <th class="text-center">Calories</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var ingredient in meal.Ingredients)
                                                {
                                                    <tr>
                                                        <td><span class="text-white">@ingredient.Name</span></td>
                                                        <td class="text-center">@ingredient.Quantity</td>
                                                        <td class="text-center">@ingredient.Calories kcal</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                    
                                    @if (!string.IsNullOrEmpty(meal.Recipe))
                                    {
                                        <div class="mt-3 p-3 rounded-3" style="background-color: #2d3748;">
                                            <p class="fw-bold text-white mb-1">Recipe:</p>
                                            <p class="text-light mb-0">@meal.Recipe</p>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                }
                
                @if (Model.NutritionPlan.MealPlan.Snacks.Any())
                {
                    <div class="card border-0 rounded-4 mb-4 overflow-hidden" style="background-color: #1f2937; border-color: #374151;">
                        <div class="card-header border-0 py-3" style="background-color: #4f46e5;">
                            <h4 class="h5 fw-bold mb-0 text-white">Snacks</h4>
                        </div>
                        <div class="card-body">
                            @foreach (var meal in Model.NutritionPlan.MealPlan.Snacks)
                            {
                                <div class="mb-4">  
                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                        <p class="fw-bold text-white mb-0">@meal.Description</p>
                                        <span class="badge bg-dark">@meal.TotalCalories kcal</span>
                                    </div>
                                    
                                    <div class="table-responsive">
                                        <table class="table table-dark table-borderless table-hover rounded">
                                            <thead class="text-light" style="background-color: #374151;">
                                                <tr>
                                                    <th>Ingredient</th>
                                                    <th class="text-center">Quantity</th>
                                                    <th class="text-center">Calories</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var ingredient in meal.Ingredients)
                                                {
                                                    <tr>
                                                        <td><span class="text-white">@ingredient.Name</span></td>
                                                        <td class="text-center">@ingredient.Quantity</td>
                                                        <td class="text-center">@ingredient.Calories kcal</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                    
                                    @if (!string.IsNullOrEmpty(meal.Recipe))
                                    {
                                        <div class="mt-3 p-3 rounded-3" style="background-color: #2d3748;">
                                            <p class="fw-bold text-white mb-1">Recipe:</p>
                                            <p class="text-light mb-0">@meal.Recipe</p>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                }
                
                <div class="py-5" style="background-color: #1f2937;">
                    <div class="container text-center">
                        <span class="badge rounded-pill px-3 py-2 mb-3" style="background-color: #4c1d95; color: #d8b4fe;">NEXT STEPS</span>
                        <h2 class="display-6 fw-bold mb-3" style="color: #c084fc;">Ready to Start?</h2>
                        <p class="lead mb-5 mx-auto" style="max-width: 700px; color: #9ca3af;">Combine this nutrition plan with a workout routine for optimal results.</p>
                        
                        <a href="/WorkoutSchema" class="btn btn-lg rounded-pill px-5 py-3" style="background-color: #8b5cf6; color: white;">
                            Create Workout Plan
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const hasAllergiesCheckbox = document.getElementById('hasAllergies');
            const foodIntolerancesSection = document.getElementById('allergiesSection');
            
            hasAllergiesCheckbox.addEventListener('change', function() {
                if (this.checked) {
                    foodIntolerancesSection.classList.remove('d-none');
                } else {
                    foodIntolerancesSection.classList.add('d-none');
                }
            });
        });
    </script>
}

@functions {
    public string GetMacroColor(string macroName)
    {
        return macroName.ToLower() switch
        {
            "protein" => "red",
            "proteins" => "red",
            "carbs" => "yellow",
            "carbohydrates" => "yellow",
            "fat" => "green",
            "fats" => "green",
            _ => "gray"
        };
    }
    
    public string GetMacroHexColor(string macroName)
    {
        return macroName.ToLower() switch
        {
            "protein" => "#f87171",
            "proteins" => "#f87171",
            "carbs" => "#fbbf24",
            "carbohydrates" => "#fbbf24",
            "fat" => "#4ade80",
            "fats" => "#4ade80",
            _ => "#9ca3af"
        };
    }
    
    public string GetMacroLabel(string macroName)
    {
        return macroName.ToLower() switch
        {
            "protein" => "Protein",
            "proteins" => "Protein",
            "carbs" => "Carbs",
            "carbohydrates" => "Carbs",
            "fat" => "Fat",
            "fats" => "Fat",
            _ => macroName
        };
    }
}