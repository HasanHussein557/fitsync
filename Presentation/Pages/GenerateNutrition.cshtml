@page
@model GenerateNutritionModel

@{
    ViewData["Title"] = "Generate Nutrition Plan";
}

<div class="container mx-auto px-4 py-6">
    <h1 class="text-2xl font-bold text-center mb-4">Generate Your Nutrition Plan</h1>
    
    @if (!ModelState.IsValid)
    {
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4">
            <ul>
                @foreach (var error in ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }
    
    <div class="max-w-lg mx-auto bg-white p-6 rounded-lg shadow-lg">
        <form method="post" asp-page-handler="GenerateNutrition" class="space-y-4">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                    <label for="weight" class="block text-gray-700 mb-2">Weight (kg)</label>
                    <input type="number" min="20" max="300" name="weight" value="@Model.Weight" 
                           class="form-input rounded border-gray-300 w-full" required/>
                </div>
                
                <div>
                    <label for="height" class="block text-gray-700 mb-2">Height (cm)</label>
                    <input type="number" min="110" max="250" name="height" value="@Model.Height" 
                           class="form-input rounded border-gray-300 w-full" required/>
                </div>
                
                <div>
                    <label for="age" class="block text-gray-700 mb-2">Age</label>
                    <input type="number" min="16" max="100" name="age" value="@Model.Age" 
                           class="form-input rounded border-gray-300 w-full" required/>
                </div>
                
                <div>
                    <label for="sex" class="block text-gray-700 mb-2">Sex</label>
                    <select name="sex" class="form-input rounded border-gray-300 w-full" required>
                        <option value="male" selected="@(Model.Sex == "male")">Male</option>
                        <option value="female" selected="@(Model.Sex == "female")">Female</option>
                        <option value="other" selected="@(Model.Sex == "other")">Other</option>
                    </select>
                </div>
                
                <div>
                    <label for="goal" class="block text-gray-700 mb-2">Goal</label>
                    <select name="goal" class="form-input rounded border-gray-300 w-full" required>
                        <option value="maintenance" selected="@(Model.Goal == "maintenance")">Maintenance</option>
                        <option value="weight_loss" selected="@(Model.Goal == "weight_loss")">Weight Loss</option>
                        <option value="muscle_gain" selected="@(Model.Goal == "muscle_gain")">Muscle Gain</option>
                        <option value="performance" selected="@(Model.Goal == "performance")">Athletic Performance</option>
                    </select>
                </div>
                
                <div>
                    <label for="dietaryPreferences" class="block text-gray-700 mb-2">Dietary Preferences</label>
                    <select name="dietaryPreferences" class="form-input rounded border-gray-300 w-full" required>
                        <option value="balanced" selected="@(Model.DietaryPreferences == "balanced")">Balanced</option>
                        <option value="regular" selected="@(Model.DietaryPreferences == "regular")">Regular</option>
                        <option value="low_carb" selected="@(Model.DietaryPreferences == "low_carb")">Low Carb</option>
                        <option value="high_protein" selected="@(Model.DietaryPreferences == "high_protein")">High Protein</option>
                        <option value="vegetarian" selected="@(Model.DietaryPreferences == "vegetarian")">Vegetarian</option>
                        <option value="vegan" selected="@(Model.DietaryPreferences == "vegan")">Vegan</option>
                        <option value="keto" selected="@(Model.DietaryPreferences == "keto")">Keto</option>
                        <option value="paleo" selected="@(Model.DietaryPreferences == "paleo")">Paleo</option>
                    </select>
                </div>
                
                <div>
                    <label for="durationWeeks" class="block text-gray-700 mb-2">Duration (weeks)</label>
                    <select name="durationWeeks" class="form-input rounded border-gray-300 w-full" required>
                        <option value="1" selected="@(Model.DurationWeeks == 1)">1 week</option>
                        <option value="2" selected="@(Model.DurationWeeks == 2)">2 weeks</option>
                        <option value="4" selected="@(Model.DurationWeeks == 4)">4 weeks</option>
                        <option value="8" selected="@(Model.DurationWeeks == 8)">8 weeks</option>
                        <option value="12" selected="@(Model.DurationWeeks == 12)">12 weeks</option>
                    </select>
                </div>
            </div>
            
            <div class="mt-4">
                <div class="flex items-center">
                    <input type="checkbox" id="hasAllergies" name="hasAllergies" value="true" 
                           class="form-checkbox h-4 w-4 text-blue-600" @(Model.HasAllergies ? "checked" : "")/>
                    <label for="hasAllergies" class="ml-2 block text-gray-700">I have food allergies or intolerances</label>
                </div>
                
                <div id="allergiesSection" class="mt-2 @(Model.HasAllergies ? "" : "hidden")">
                    <label for="foodIntolerances" class="block text-gray-700 mb-2">List your food intolerances (comma separated)</label>
                    <input type="text" name="foodIntolerances" value="@Model.FoodIntolerances" 
                           placeholder="e.g., peanuts, shellfish, dairy" class="form-input rounded border-gray-300 w-full"/>
                </div>
            </div>
            
            <div class="flex justify-center mt-4">
                <button type="submit" class="btn btn-primary px-6 py-2">Generate Nutrition Plan</button>
            </div>
        </form>
    </div>
    
    @if (Model.NutritionPlan != null)
    {
        <div class="mt-8 mx-auto max-w-4xl">
            <h2 class="text-xl font-bold mb-4 text-center">Your Personalized Nutrition Plan</h2>
            
            <div class="bg-white p-6 rounded-lg shadow-lg mb-6">
                <h3 class="font-bold text-lg mb-4 text-center text-blue-600">Daily Nutritional Goals</h3>
                
                <div class="grid grid-cols-4 gap-4 text-center">
                    <div class="p-4 bg-blue-50 rounded-lg">
                        <p class="text-sm text-gray-600">Daily Calories</p>
                        <p class="text-xl font-bold text-blue-700">@Model.NutritionPlan.GetAverageDailyCalories() kcal</p>
                        <p class="text-xs text-gray-500">(@Model.NutritionPlan.DailyCaloriesRange.Min - @Model.NutritionPlan.DailyCaloriesRange.Max)</p>
                    </div>
                    
                    @foreach (var macro in Model.NutritionPlan.MacronutrientsRange)
                    {
                        <div class="p-4 bg-@GetMacroColor(macro.Key)-50 rounded-lg">
                            <p class="text-sm text-gray-600">@GetMacroLabel(macro.Key)</p>
                            <p class="text-xl font-bold text-@GetMacroColor(macro.Key)-700">@Model.NutritionPlan.GetAverageMacroValue(macro.Key) g</p>
                            <p class="text-xs text-gray-500">(@macro.Value.Min - @macro.Value.Max)</p>
                        </div>
                    }
                </div>
            </div>
            
            <h3 class="font-bold text-lg mb-4 text-center text-blue-600">Daily Meal Plan</h3>
            
            @if (Model.NutritionPlan.MealPlan.Breakfast.Any())
            {
                <div class="bg-white p-4 rounded-lg shadow mb-4">
                    <h4 class="font-bold text-lg text-blue-600 border-b pb-2 mb-3">Breakfast</h4>
                    @foreach (var meal in Model.NutritionPlan.MealPlan.Breakfast)
                    {
                        <div class="mb-4">
                            <div class="flex justify-between items-center mb-2">
                                <p class="font-semibold">@meal.Description</p>
                                <span class="text-sm text-gray-600">@meal.TotalCalories kcal</span>
                            </div>
                            
                            <table class="w-full">
                                <thead class="bg-gray-100">
                                    <tr>
                                        <th class="text-left p-2">Ingredient</th>
                                        <th class="text-center p-2">Quantity</th>
                                        <th class="text-center p-2">Calories</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var ingredient in meal.Ingredients)
                                    {
                                        <tr class="border-b">
                                            <td class="p-2">@ingredient.Name</td>
                                            <td class="text-center p-2">@ingredient.Quantity</td>
                                            <td class="text-center p-2">@ingredient.Calories kcal</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            
                            @if (!string.IsNullOrEmpty(meal.Recipe))
                            {
                                <div class="mt-2 text-sm p-2 bg-blue-50 rounded">
                                    <p class="font-semibold">Recipe:</p>
                                    <p>@meal.Recipe</p>
                                </div>
                            }
                        </div>
                    }
                </div>
            }
            
            @if (Model.NutritionPlan.MealPlan.Lunch.Any())
            {
                <div class="bg-white p-4 rounded-lg shadow mb-4">
                    <h4 class="font-bold text-lg text-blue-600 border-b pb-2 mb-3">Lunch</h4>
                    @foreach (var meal in Model.NutritionPlan.MealPlan.Lunch)
                    {
                        <div class="mb-4">
                            <div class="flex justify-between items-center mb-2">
                                <p class="font-semibold">@meal.Description</p>
                                <span class="text-sm text-gray-600">@meal.TotalCalories kcal</span>
                            </div>
                            
                            <table class="w-full">
                                <thead class="bg-gray-100">
                                    <tr>
                                        <th class="text-left p-2">Ingredient</th>
                                        <th class="text-center p-2">Quantity</th>
                                        <th class="text-center p-2">Calories</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var ingredient in meal.Ingredients)
                                    {
                                        <tr class="border-b">
                                            <td class="p-2">@ingredient.Name</td>
                                            <td class="text-center p-2">@ingredient.Quantity</td>
                                            <td class="text-center p-2">@ingredient.Calories kcal</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            
                            @if (!string.IsNullOrEmpty(meal.Recipe))
                            {
                                <div class="mt-2 text-sm p-2 bg-blue-50 rounded">
                                    <p class="font-semibold">Recipe:</p>
                                    <p>@meal.Recipe</p>
                                </div>
                            }
                        </div>
                    }
                </div>
            }
            
            @if (Model.NutritionPlan.MealPlan.Dinner.Any())
            {
                <div class="bg-white p-4 rounded-lg shadow mb-4">
                    <h4 class="font-bold text-lg text-blue-600 border-b pb-2 mb-3">Dinner</h4>
                    @foreach (var meal in Model.NutritionPlan.MealPlan.Dinner)
                    {
                        <div class="mb-4">
                            <div class="flex justify-between items-center mb-2">
                                <p class="font-semibold">@meal.Description</p>
                                <span class="text-sm text-gray-600">@meal.TotalCalories kcal</span>
                            </div>
                            
                            <table class="w-full">
                                <thead class="bg-gray-100">
                                    <tr>
                                        <th class="text-left p-2">Ingredient</th>
                                        <th class="text-center p-2">Quantity</th>
                                        <th class="text-center p-2">Calories</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var ingredient in meal.Ingredients)
                                    {
                                        <tr class="border-b">
                                            <td class="p-2">@ingredient.Name</td>
                                            <td class="text-center p-2">@ingredient.Quantity</td>
                                            <td class="text-center p-2">@ingredient.Calories kcal</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            
                            @if (!string.IsNullOrEmpty(meal.Recipe))
                            {
                                <div class="mt-2 text-sm p-2 bg-blue-50 rounded">
                                    <p class="font-semibold">Recipe:</p>
                                    <p>@meal.Recipe</p>
                                </div>
                            }
                        </div>
                    }
                </div>
            }
            
            @if (Model.NutritionPlan.MealPlan.Snacks.Any())
            {
                <div class="bg-white p-4 rounded-lg shadow mb-4">
                    <h4 class="font-bold text-lg text-blue-600 border-b pb-2 mb-3">Snacks</h4>
                    @foreach (var meal in Model.NutritionPlan.MealPlan.Snacks)
                    {
                        <div class="mb-4">
                            <div class="flex justify-between items-center mb-2">
                                <p class="font-semibold">@meal.Description</p>
                                <span class="text-sm text-gray-600">@meal.TotalCalories kcal</span>
                            </div>
                            
                            <table class="w-full">
                                <thead class="bg-gray-100">
                                    <tr>
                                        <th class="text-left p-2">Ingredient</th>
                                        <th class="text-center p-2">Quantity</th>
                                        <th class="text-center p-2">Calories</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var ingredient in meal.Ingredients)
                                    {
                                        <tr class="border-b">
                                            <td class="p-2">@ingredient.Name</td>
                                            <td class="text-center p-2">@ingredient.Quantity</td>
                                            <td class="text-center p-2">@ingredient.Calories kcal</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            
                            @if (!string.IsNullOrEmpty(meal.Recipe))
                            {
                                <div class="mt-2 text-sm p-2 bg-blue-50 rounded">
                                    <p class="font-semibold">Recipe:</p>
                                    <p>@meal.Recipe</p>
                                </div>
                            }
                        </div>
                    }
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const hasAllergiesCheckbox = document.getElementById('hasAllergies');
            const foodIntolerancesSection = document.getElementById('allergiesSection');
            
            hasAllergiesCheckbox.addEventListener('change', function() {
                if (this.checked) {
                    foodIntolerancesSection.classList.remove('hidden');
                } else {
                    foodIntolerancesSection.classList.add('hidden');
                }
            });
        });
    </script>
}

@functions {
    public string GetMacroColor(string macroName)
    {
        return macroName.ToLower() switch
        {
            "protein" => "red",
            "proteins" => "red",
            "carbs" => "yellow",
            "carbohydrates" => "yellow",
            "fat" => "green",
            "fats" => "green",
            _ => "gray"
        };
    }
    
    public string GetMacroLabel(string macroName)
    {
        return macroName.ToLower() switch
        {
            "protein" => "Protein",
            "proteins" => "Protein",
            "carbs" => "Carbs",
            "carbohydrates" => "Carbs",
            "fat" => "Fat",
            "fats" => "Fat",
            _ => macroName
        };
    }
}